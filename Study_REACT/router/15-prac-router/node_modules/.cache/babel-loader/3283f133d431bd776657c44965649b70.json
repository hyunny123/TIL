{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjung/Desktop/js/Study_REACT/router/15-prac-router/src/pages/QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport useHttp from \"../hooks/useHttp\";\nimport { getSingleQuote } from \"../lib/api\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Lee\",\n  text: \"어렵지만 재밌는 리액트!\"\n}, {\n  id: \"q2\",\n  author: \"Kim\",\n  text: \"어렵지만 재밌는 자바스크립트!\"\n}, {\n  id: \"q3\",\n  author: \"Park\",\n  text: \"어렵지만 재밌는 리액트네이티브!\"\n}];\nconst QuoteDetail = () => {\n  _s();\n  const match = useRouteMatch();\n  const params = useParams();\n  //console.log(match);\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  //const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC778\\uC6A9\\uBB38\\uC744 \\uCC3E\\uC744\\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetail, \"t1PEK/87Yc+8MsV+4xcPsAzOxOA=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["React","Fragment","useEffect","useParams","Route","Link","useRouteMatch","useHttp","getSingleQuote","Comments","HighlightedQuote","LoadingSpinner","DUMMY_QUOTES","id","author","text","QuoteDetail","match","params","quoteId","sendRequest","status","data","loadedQuote","error","quote","path","url"],"sources":["/Users/hyunjung/Desktop/js/Study_REACT/router/15-prac-router/src/pages/QuoteDetail.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport useHttp from \"../hooks/useHttp\";\nimport { getSingleQuote } from \"../lib/api\";\n\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\n\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Lee\", text: \"어렵지만 재밌는 리액트!\" },\n  { id: \"q2\", author: \"Kim\", text: \"어렵지만 재밌는 자바스크립트!\" },\n  { id: \"q3\", author: \"Park\", text: \"어렵지만 재밌는 리액트네이티브!\" },\n];\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  //console.log(match);\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  //const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (!quote) {\n    return <p>인용문을 찾을수 없습니다.</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      {/* <Route path={`/quotes/${params.quoteId}`} exact> */}\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          {/* <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}> */}\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n\n      {/* <Route path={`/quotes/${params.quoteId}/comments`}> */}\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACxE,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,cAAc,QAAQ,YAAY;AAE3C,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,cAAc,MAAM,iCAAiC;AAAC;AAE7D,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAgB,CAAC,EAClD;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAmB,CAAC,EACrD;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,MAAM;EAAEC,IAAI,EAAE;AAAoB,CAAC,CACxD;AAED,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,KAAK,GAAGX,aAAa,EAAE;EAC7B,MAAMY,MAAM,GAAGf,SAAS,EAAE;EAC1B;EACA,MAAM;IAAEgB;EAAQ,CAAC,GAAGD,MAAM;EAE1B,MAAM;IACJE,WAAW;IACXC,MAAM;IACNC,IAAI,EAAEC,WAAW;IACjBC;EACF,CAAC,GAAGjB,OAAO,CAACC,cAAc,EAAE,IAAI,CAAC;EAEjCN,SAAS,CAAC,MAAM;IACdkB,WAAW,CAACD,OAAO,CAAC;EACtB,CAAC,EAAE,CAACC,WAAW,EAAED,OAAO,CAAC,CAAC;;EAE1B;;EAEA,IAAIE,MAAM,KAAK,SAAS,EAAE;IACxB,oBACE;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACd;EAEV;EACA,IAAI,CAACI,KAAK,EAAE;IACV,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAC9B;EAEA,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACV,IAAK;MAAC,MAAM,EAAEU,KAAK,CAACX;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAE5D,QAAC,KAAK;MAAC,IAAI,EAAEG,KAAK,CAACS,IAAK;MAAC,KAAK;MAAA,uBAC5B;QAAK,SAAS,EAAC,UAAU;QAAA,uBAEvB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAET,KAAK,CAACU,GAAI,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAEjD;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACA,eAGR,QAAC,KAAK;MAAC,IAAI,EAAG,GAAEV,KAAK,CAACS,IAAK,WAAW;MAAA,uBACpC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEf,CAAC;AAAC,GAjDIV,WAAW;EAAA,QACDV,aAAa,EACZH,SAAS,EASpBI,OAAO;AAAA;AAAA,KAXPS,WAAW;AAmDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}